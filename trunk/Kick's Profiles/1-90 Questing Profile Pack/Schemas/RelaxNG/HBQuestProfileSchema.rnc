default namespace = ""
namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"

# ********** HONORBUDDY CORE GRAMMAR **********
start =
  element HBProfile {
    attribute xsi:noNamespaceSchemaLocation { text },
    (text
     | AvoidMobs
     | Blacklist
     | Blackspots
     | Mailboxes
     | MailBlue
     | MailGreen
     | MailGrey
     | MailPurple
     | MailWhite
     | MaxLevel
     | MinDurability
     | MinFreeBagSlots
     | MinLevel
     | Name
     | ProtectedItems
     | Quest
     | QuestOrder
     | SellBlue
     | SellGreen
     | SellGrey
     | SellPurple
     | SellWhite
     | TargetElites
     | TargetingDistance
     | Vendors
     )+
  }

AvoidMobs =
  element AvoidMobs {
    Mob*
  }

Blacklist =
  element Blacklist {
    Mob_Blacklist*
    | Object_Blacklist*
  }

Blackspots =
  element Blackspots {
    element Blackspot {
      attribute Height { xsd:decimal }?,
      attribute Name { text }?,
      attribute Radius { xsd:decimal }?,
      Location
    }*
  }

Checkpoint =
  element Checkpoint {
    attribute Level { xsd:decimal }
  }

ClearMailbox =
  element ClearMailbox {
    empty
  }

ClearVendor =
  element ClearVendor {
    empty
  }

CollectFrom =
  element CollectFrom {
    (Mob
     | element GameObject {
         attribute Id { xsd:integer }?,
         attribute Name { text }?
       })*,
    (Vendor
     | element Gameobject {
         attribute Id { xsd:integer },
         attribute Name { text }
       }*
     | Object*)
  }

DisableBehavior =
  element DisableBehavior {
    attribute Name { text }
  }

DisableRepair =
  element DisableRepair {
    empty
  }

EnableBehavior =
  element EnableBehavior {
    attribute Name { text }
  }

EnableRepair =
  element EnableRepair {
    empty
  }

Factions =
  element Factions {
    text
  }

GrindTo =
  element GrindTo {
    attribute Condition { text }?,
    attribute GoalText { text }?,
    attribute Level { xsd:decimal }?,
    attribute Nav { xsd:NCName }?
  }

Hotspot =
  element Hotspot {
    Location
  }

Hotspot_Waypoint =
  element Hotspot {
    attribute Name { text }?,
    attribute StartPoint { xsd:boolean }?,
    attribute StartingPoint { xsd:boolean }?,
    Location
  }

Hotspots =
  element Hotspots {
    Hotspot*
  }

If =
  element If {
    attribute Condition { text },
    (text
     | QuestOrder_Directives*
     | element Else {
	 QuestOrder_Directives*
       }
     | element ElseIf {
         attribute Condition { text },
	 QuestOrder_Directives*
       })+
  }

LootMobs =
  element LootMobs {
    attribute Value { xsd:NCName }
  }

Mailboxes =
  element Mailboxes {
    element Mailbox {
      attribute Name { text }?,
      attribute Nav { xsd:NCName }?,
      Location
    }*
  }

MailBlue =
  element MailBlue { xsd:NCName }

MailGreen =
  element MailGreen { xsd:NCName }

MailGrey =
  element MailGrey { xsd:NCName }

MailPurple =
  element MailPurple { xsd:NCName }

MailWhite =
  element MailWhite { xsd:NCName }

MaxLevel =
  element MaxLevel { xsd:integer }

MinDurability =
   element MinDurability { xsd:decimal }

MinFreeBagSlots =
  element MinFreeBagSlots { xsd:integer }

MinLevel =
  element MinLevel { xsd:integer }

Mob =
  element Mob {
    attribute Id { xsd:integer }?,
    attribute Name { text }?
  }

Mob_Blacklist =
  element Mob {
    attribute Flags { text }?,
    attribute Id { xsd:integer },
    attribute Name { text }?
  }

MoveTo =
  element MoveTo {
    attribute DestName { text }?,
    attribute Distance { xsd:integer }?,
    attribute LocationName { text }?,
    attribute Name { xsd:NCName }?,
    attribute Nav { xsd:NCName }?,
    attribute QuestId { xsd:integer }?,
    attribute WaitTime { xsd:integer }?,
    Location
  }

Name = element Name { text }

Object =
  element Object {
    attribute Id { xsd:integer }?,
    attribute Name { text }
  }

Object_Blacklist =
  element Object {
    attribute Flags { text }?,
    attribute Id { xsd:integer },
    attribute Name { text }?
  }

Objective =
  element Objective {
    attribute CollectCount { xsd:integer }?,
    attribute CollectFrom { xsd:integer }?,
    attribute CollectionCount { xsd:integer }?,
    attribute GiverName { text }?,
    attribute ItemId { xsd:integer }?,
    attribute ItemName { text }?,
    attribute KillCount { xsd:integer }?,
    attribute MobId { text }?,
    attribute MobId2 { xsd:integer }?,
    attribute MobName { text }?,
    attribute MobState { xsd:NCName }?,
    attribute Name { text }?,
    attribute Nav { xsd:NCName }?,
    attribute ObjectId { xsd:integer }?,
    attribute ObjectName { text }?,
    attribute QuestId { xsd:integer }?,
    attribute QuestName { text }?,
    attribute Questid { xsd:integer }?,
    attribute Questname { text }?,
    attribute TargetId { xsd:integer }?,
    attribute TargetType { xsd:NCName }?,
    attribute Type { xsd:NCName },
    attribute UseCount { xsd:integer }?,
    attribute WaitForNpcs { xsd:NCName }?,
    Location?,
    (TargetMinLevel, TargetMaxLevel)?,
    (CollectFrom
     | Hotspots
     | element MaximumHotspotTime { xsd:integer })*
  }

PickUp =
  element PickUp {
    attribute GiverId { xsd:integer },
    attribute GiverName { text }?,
    attribute GiverType { xsd:NCName }?,
    attribute Nav { xsd:NCName }?,
    attribute QuestId { xsd:integer },
    attribute QuestName { text }?,
    attribute Type { xsd:NCName }?,
    Location?
  }

ProtectedItems =
  element ProtectedItems {
    element Item {
      attribute Entry { xsd:integer }?,
      attribute Id { xsd:integer }?,
      attribute Name { text }
    }+
  }

Quest =
  element Quest {
    attribute Id { xsd:integer },
    attribute Name { text }?,
    TurnIn?,
    CollectFrom?,
    Objective*
  }

QuestOrder =
  element QuestOrder {
    attribute IgnoreCheckpoints { xsd:NCName }?,
    QuestOrder_Directives*
   }

QuestOrder_Directives =
  (text
   | Checkpoint
   | ClearMailbox
   | ClearVendor
   | CustomBehavior
   | DisableBehavior
   | DisableRepair
   | EnableBehavior
   | EnableRepair
   | GrindTo
   | If
   | LootMobs
   | MoveTo
   | Objective
   | PickUp
   | SetGrindArea
   | SetMailbox
   | SetVendor
   | TargetingDistance
   | TurnIn
   | UseItem
   | UseMount
   | While
  )+

SellBlue =
  element SellBlue { xsd:NCName }

SellGreen =
  element SellGreen { xsd:NCName }

SellGrey =
  element SellGrey { xsd:NCName }

SellPurple =
  element SellPurple { xsd:NCName }

SellWhite =
  element SellWhite { xsd:NCName }

SetGrindArea =
  element SetGrindArea {
    element GrindArea {
      Name?,
      (Factions | TargetElites | TargetMaxLevel | TargetMinLevel)*,
      (Blacklist
       | element MobId { xsd:integer })?,
      Hotspots
    }
    | element Grindarea {
        (Factions | TargetMaxLevel | TargetMinLevel)+, Hotspots
      }
  }

SetMailbox = element SetMailbox { Mailboxes }

SetVendor = element SetVendor { Vendors }

TargetingDistance =
  element TargetingDistance {
    attribute Value { xsd:NMTOKEN }?,
    text
  }

TargetElites = element TargetElites { xsd:NCName }

TargetMinLevel = element TargetMinLevel { xsd:integer }

TargetMaxLevel = element TargetMaxLevel { xsd:integer }

TurnIn =
  element TurnIn {
    attribute GiverName { text }?,
    attribute Nav { xsd:NCName }?,
    attribute NpcName { text }?,
    attribute QuestId { xsd:integer }?,
    attribute QuestName { text }?,
    attribute Questid { xsd:integer }?,
    attribute TurnInId { xsd:integer }?,
    attribute TurnInName { text }?,
    attribute TurnInType { xsd:NCName }?,
    attribute TurnInid { xsd:integer }?,
    Location?
  }

UseItem =
  element UseItem {
    attribute ItemId { xsd:integer },
    attribute ItemName { text }?,
    attribute Name { text }?,
    attribute Nav { xsd:NCName }?,
    attribute NumOfTimes { xsd:integer }?,
    attribute QuestId { xsd:integer },
    attribute QuestName { text }?,
    attribute TargetId { xsd:integer }?,
    attribute TargetType { xsd:NCName }?,
    attribute WaitTime { xsd:integer }?,
    Location
  }

UseMount =
  element UseMount {
    attribute Value { xsd:NCName }
  }

Vendor =
  element Vendor {
    attribute Entry { xsd:integer }?,
    attribute Id { xsd:integer }?,
    attribute Name { text },
    attribute Nav { xsd:NCName }?,
    attribute TrainClass { xsd:NCName }?,
    attribute Type { xsd:NCName }?,
    Location?
  }

Vendors =
  element Vendors {
    Vendor*
  }

While =
  element While {
    attribute Condition { text },
    QuestOrder_Directives*
  }


# ********** Synthetic nodes **********
Location =
      attribute X { xsd:decimal },
      attribute Y { xsd:decimal },
      attribute Z { xsd:decimal }


# ********** CUSTOM BEHAVIORS **********
include "HBCustomBehaviors.rnc"
