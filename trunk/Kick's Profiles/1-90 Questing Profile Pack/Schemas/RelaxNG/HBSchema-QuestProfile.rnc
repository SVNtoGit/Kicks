default namespace = ""
namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"

# =====
# Original contribution by chinajade

# -----
# This schema is more restrictive than Honorbuddy allows.
# For instance, the schema only allows the preferred name of attributes, and flags
# the alias names as errors.  For instance, the schema prefers "Id" to "Entry",
# "DestName" to "Name" (depending on context), etc.
# The intent is to:
# 1) Make the profile pack consistent throughout by using the same names
#    for the same attributes within a given context.
# 2) Maximize the readability and maintainability of the profile
#    by using descriptive names when ambiguity is possible.
#    An example of this, we prefer
#      <UseItem ... QuestId="123" ... ItemId="234" ... />
#    to
#      <UseItem ... Id="234" ... />
#    Since a quick read would be unclear whether the Id alias refers to
#    the QuestId or the ItemId.

# -----
# To convert this grammar to XSD:
# * Grab Trang from http://www.thaiopensource.com/relaxng/trang.html
# * Run the following command:
#   java.exe -jar trang.jar HBSchema-QuestProfile.rnc HBSchema-QuestProfile.xsd
# * Enjoy your new XSD schema.
#   PLEASE DO NOT CONVERT FROM XSD TO RNC--much information will be lost
#   since RelaxNG is slightly more expressive than XSD.
#    >>> The RelaxNG schema is considered the 'authoritative' schema source <<<
#

# TODO:
# * Conditions
# * CustomBehaviors


# ********** Schema for HONORBUDDY CORE GRAMMAR **********
start =
  element HBProfile
  {
    attribute xsi:noNamespaceSchemaLocation { text }?,
    (AvoidMobs
     | Blacklist
     | BlacklistedQuestGivers
     | Blackspots
     | ContinentId
     | Mailboxes
     | MailBlue
     | MailGreen
     | MailGrey
     | MailPurple
     | MailWhite
     | MaxLevel
     | MinDurability
     | MinFreeBagSlots
     | MinLevel
     | Name
     | ProtectedItems
     | Quest
     | QuestOrder
     | SellBlue
     | SellGreen
     | SellGrey
     | SellPurple
     | SellWhite
     | TargetElites
     | TargetingDistance
     | UseMount
     | Vendors
     )*
  }

AbandonQuest =
  element AbandonQuest
  {
    attribute QuestId { HBType-Id }
  }

AvoidMobs =
  element AvoidMobs
  {
    Mob*
  }

Blacklist =
  element Blacklist
  {
    (Blacklist_Mob
     | Blacklist_Object)*
  }

Blacklist_Mob =
  element Mob
  {
    attribute Flags { HBType-BehaviorFlags },
    Attribute-Id,
    attribute Name { HBType-Name }?
  }

Blacklist_Object =
  element Object
  {
    attribute Flags { HBType-BehaviorFlags }?,
    attribute Id { HBType-Id },
    attribute Name { HBType-Name }?
  }

BlacklistedQuestGivers =
  element BlacklistedQuestGivers
  {
    Attribute-Id,
    attribute Name { HBType-Name }
  }

Blackspot =
  element Blackspot
  {
    attribute Height { xsd:decimal }?,
    attribute Name { HBType-Name }?,
    attribute Radius { HBType-DistancePositive }?,
    Attributes-XYZ
  }

Blackspot_Aerial =
  element AerialBlackspot
  {
    attribute Faction { HBType-Faction }?,
    Attributes-XYZ,
    attribute MapId { HBType-MapId }?,
    attribute Name { HBType-Name }?
  }

Blackspots =
  element Blackspots
  {
    (Blackspot
     | Blackspot_Aerial)*
  }

Checkpoint =
  element Checkpoint
  {
    attribute Level { HBType-Level }
  }

ClearGrindArea =
  element ClearGrindArea
  {
    empty
  }

ClearMailbox =
  element ClearMailbox
  {
    empty
  }

ClearVendor =
  element ClearVendor
  {
    empty
  }

CollectFrom =
  element CollectFrom
  {
    (element Mob { CollectFrom_Entry }
     | element Object { CollectFrom_Entry }
     | element Vendor { CollectFrom_Entry }
    )*
  }

CollectFrom_Entry =
  attribute Id { HBType-Id },
  attribute Name { HBType-Name }?,
  attribute Type { HBType-CollectFromType }?

ContinentId =
  element ContinentId
  {
    HBType-MapId
  }

DisableBehavior =
  element DisableBehavior
  {
    attribute Name { HBType-BehaviorFlags }
  }

DisableRepair =
  element DisableRepair
  {
    empty
  }

EnableBehavior =
  element EnableBehavior
  {
    attribute Name { HBType-BehaviorFlags }
  }

EnableRepair =
  element EnableRepair
  {
    empty
  }

Factions =
  element Factions
  {
    list { HBType-Id+ }
  }

ForceMail =
  element ForceMail
  {
    element Item {
      Attribute-Id,
      attribute Name { HBType-Name }?
    }+
  }

GrindArea =
  element GrindArea
  {
    Blacklist?
    & (Factions
       | MobIds
       | (Factions, MobIds)
       | (MobIds, Factions))
    & LootMobs?
    & LootRadius?
    & MaximumHotspotTime?
    & MaxDistance?
    & Name?
    & RandomizeHotspots?
    & TargetElites?
    & TargetingDistance?
    & TargetMaxLevel?
    & TargetMinLevel?
    & UseMount?
    & Hotspots
  }

GrindTo =
  element GrindTo
  {
    (attribute Condition { HBType-Condition }
     | attribute Level { HBType-Level }),
    attribute GoalText { HBType-Name }?,
    attribute Nav { HBType-Nav }?
  }

Hotspot =
  element Hotspot
  {
    Attributes-XYZ
  }

Hotspots =
  element Hotspots
  {
    Hotspot*
  }

If =
  element If
  {
    attribute Condition { HBType-Condition },
    (QuestOrder_Directives*
     | element Else
       {
	 QuestOrder_Directives*
       }
     | element ElseIf
       {
         attribute Condition { HBType-Condition },
	 QuestOrder_Directives*
       })+
  }

LootMobs =
  element LootMobs
  {
    attribute Value { HBType-MetaBoolean }
  }

LootRadius =
  element LootRadius
  {
    attribute Value { HBType-MetaDecimalNonNegative }?
  }

Mailboxes =
  element Mailboxes
  {
    element Mailbox
    {
      attribute Name { HBType-Name }?,
      attribute Nav { HBType-Nav }?,
      Attributes-XYZ
    }*
  }

MailBlue =
  element MailBlue
  {
    HBType-Boolean
  }

MailGreen =
  element MailGreen
  {
    HBType-Boolean
  }

MailGrey =
  element MailGrey
  {
    HBType-Boolean
  }

MailPurple =
  element MailPurple
  {
    HBType-Boolean
  }

MailWhite =
  element MailWhite
  {
    HBType-Boolean
  }

MaximumHotspotTime =
  element MaximumHotspotTime
  {
    HBType-TimeDuration
  }

MaxDistance =
  element MaxDistance
  {
    HBType-DistancePositive
  }

MaxLevel =
  element MaxLevel
  {
    HBType-Count
  }

MinDurability =
  element MinDurability
  {
    xsd:decimal { minInclusive="0.0" }
  }

MinFreeBagSlots =
  element MinFreeBagSlots
  {
    xsd:nonNegativeInteger
  }

MinLevel =
  element MinLevel
  {
    HBType-Count
  }

Mob =
  element Mob
  {
    Attribute-Id,
    attribute Name { HBType-Name }?
  }

MobIds =
  element MobIds
  {
    list { HBType-Id+ }
  }

MoveTo =
  element MoveTo
  {
    attribute DestName { HBType-Name }?,
    attribute Nav { HBType-Nav }?,
    attribute Precision { HBType-MetaDecimalNonNegative }?,
    attribute QuestId { HBType-Id }?,
    Attributes-XYZ
  }

Name =
  element Name
  {
    HBType-Name
  }

Object =
  element Object
  {
    Attribute-Id,
    attribute Name { HBType-Name }?
  }

Objective |=
  element Objective
  {
    attribute Type { "CollectItem" },
    Attributes-ObjectiveCore,
    attribute CollectCount { HBType-Count },    
    attribute ItemId { HBType-Id },
    attribute ItemName { HBType-Name }?
  }

Objective |=
  element Objective
  {
    attribute Type { "KillMob" },
    Attributes-ObjectiveCore,
    attribute KillCount { HBType-Count },
    attribute MobId { HBType-Id },
    attribute MobName { HBType-Name }?
  }

Objective |=
  element Objective
  {
    attribute Type { "UseObject" },
    Attributes-ObjectiveCore,
    attribute ObjectId { HBType-Id },
    attribute ObjectName { HBType-Name }?,
    attribute UseCount { HBType-Count }
  }

ObjectiveOverride |=
  element Objective
  {
    attribute Type { "CollectItem" },
    attribute CollectCount { HBType-Count },    
    attribute ItemId { HBType-Id },
    attribute ItemName { HBType-Name }?, # convenience--HB doesn't support this
    CollectFrom?,
    ObjectiveOverride_GrindArea
  }

ObjectiveOverride |=
  element Objective
  {
    attribute Type { "KillMob" },
    attribute KillCount { HBType-Count },
    attribute MobId { HBType-Id },
    attribute MobName { HBType-Name }?, # convenience--HB doesn't support this
    CollectFrom?,
    ObjectiveOverride_GrindArea
  }

ObjectiveOverride |=
  element Objective
  {
    attribute Type { "TurnIn" }
  }

ObjectiveOverride |=
  element Objective
  {
    attribute Type { "UseObject" },
    attribute ObjectId { HBType-Id },
    attribute ObjectName { HBType-Name }?,
    attribute UseCount { HBType-Count },
    ObjectiveOverride_GrindArea
  }

ObjectiveOverride_GrindArea =
  (TargetMinLevel?
   & TargetMaxLevel?),
  Hotspots
  

PickUp =
  element PickUp
  {
    attribute GiverId { HBType-Id },
    attribute GiverName { HBType-Name }?,
    attribute GiverType { HBType-QuestGiverType }?,
    attribute Nav { HBType-Nav }?,
    attribute QuestId { HBType-Id },
    attribute QuestName { HBType-Name }?,
    Attributes-XYZ?
  }

ProtectedItems =
  element ProtectedItems
  {
    element Item {
      Attribute-Id,
      attribute Name { HBType-Name }?
    }+
  }

Quest =
  element Quest
  {
    attribute Id { HBType-Id },
    attribute Name { HBType-Name }?,
    ObjectiveOverride+
  }

QuestOrder =
  element QuestOrder
  {
    attribute IgnoreCheckpoints { HBType-Boolean }?,
    QuestOrder_Directives*
  }

QuestOrder_Directives =
  (AbandonQuest
   | Checkpoint
   | ClearGrindArea
   | ClearMailbox
   | ClearVendor
   | CustomBehavior
   | DisableBehavior
   | DisableRepair
   | EnableBehavior
   | EnableRepair
   | GrindTo
   | If
   | LootMobs
   | LootRadius
   | MoveTo
   | Objective
   | PickUp
   | SetGrindArea
   | SetMailbox
   | SetVendor
   | TargetingDistance
   | TurnIn
   | UseItem
   | UseMount
   | While
  )+

RandomizeHotspots =
  element RandomizeHotspots
  {
    HBType-Boolean
  }

SellBlue =
  element SellBlue
  {
    HBType-Boolean
  }

SellGreen =
  element SellGreen
  {
    HBType-Boolean
  }

SellGrey =
  element SellGrey
  {
    HBType-Boolean
  }

SellPurple =
  element SellPurple
  {
    HBType-Boolean
  }

SellWhite =
  element SellWhite
  {
    HBType-Boolean
  }

SetGrindArea =
  element SetGrindArea
  {
    GrindArea
  }

SetMailbox =
  element SetMailbox
  {
    Mailboxes
  }

SetVendor =
  element SetVendor
  {
    Vendors
  }

TargetingDistance =
  element TargetingDistance
  {
    attribute Value { HBType-MetaDecimalNonNegative }?
  }

TargetElites =
  element TargetElites
  {
    HBType-Boolean
  }

TargetMinLevel =
  element TargetMinLevel
  {
    HBType-Count
  }

TargetMaxLevel =
  element TargetMaxLevel
  {
    HBType-Count
  }

TurnIn =
  element TurnIn
  {
    (attribute QuestId { HBType-Id },
     attribute QuestName { HBType-Name }?
    )
    | (attribute Nav { HBType-Nav }?,
       attribute QuestId { HBType-Id },
       attribute QuestName { HBType-Name }?,
       attribute TurnInId { HBType-Id },
       attribute TurnInName { HBType-Name }?,
       attribute TurnInType { HBType-QuestTurnInType }?,
       Attributes-XYZ?)
  }

UseItem =
  element UseItem
  {
    attribute ItemId { HBType-Id },
    attribute Nav { HBType-Nav }?,
    attribute QuestId { HBType-Id },
    attribute TargetId { HBType-Id }?,
    attribute TargetType { HBType-UseItemType }?,
    Attributes-XYZ
  }

UseMount =
  element UseMount
  {
    attribute Value { HBType-Boolean }
  }

Vendor =
  element Vendor
  {
    Attribute-Id,
    attribute Name { HBType-Name },
    attribute Nav { HBType-Nav }?,
    attribute TrainClass { HBType-TrainClass }?,
    attribute Type { HBType-VendorType }?,
    Attributes-XYZ?
  }

Vendors =
  element Vendors
  {
    Vendor*
  }

While =
  element While
  {
    attribute Condition { HBType-Condition },
    QuestOrder_Directives*
  }


# ********** Synthetic nodes **********

Attribute-Id =
  attribute Id { HBType-Id }

Attributes-XYZ =
  attribute X { xsd:decimal },
  attribute Y { xsd:decimal },
  attribute Z { xsd:decimal }

Attributes-ObjectiveCore =
  attribute Nav { HBType-Nav }?,
  attribute QuestId { HBType-Id },
  attribute QuestName { HBType-Name }?,
  Attributes-XYZ?

HBType-BehaviorFlags =
   xsd:token { pattern="All|((Combat|Death|Loot|Pull|Rest|Roam|Vendor)(,\s*(Combat|Death|Loot|Pull|Rest|Roam|Vendor))*)" }

HBType-Boolean =
  "False"
  | "True"

HBType-CollectFromType =
  "Mob"
  | "Object"
  | "Vendor"

HBType-Count =
  xsd:positiveInteger

HBType-Distance =
  xsd:decimal { minInclusive="0.0" }

HBType-DistancePositive =
  xsd:decimal { minExclusive="0.0" }

HBType-Faction =
  "Alliance"
  | "Horde"
  | "Neutral"

HBType-Id =
  xsd:positiveInteger

HBType-Level =
  xsd:decimal { minInclusive="1.0" }

HBType-MapId =
  xsd:nonNegativeInteger

HBType-MetaBoolean =
  HBType-Boolean
  | "null"

HBType-MetaDecimal =
  xsd:decimal
  | "null"

HBType-MetaDecimalNonNegative =
  xsd:decimal { minInclusive="0.0" }
  | "null"

HBType-Name =
  text

HBType-Nav =
  "Fly"
  | "Run"

HBType-ObjectiveType =
  "CollectItem"
  | "KillMob"
  | "UseObject"

HBType-Percent =
  xsd:decimal { minInclusive="0.0" maxInclusive="100.0" }

HBType-QuestGiverType =
  "Item"
  | "Npc"
  | "Object"

HBType-QuestTurnInType =
  "Npc"
  | "Object"

HBType-UseItemType =
  "GameObject"
  | "None"
  | "Npc"

HBType-TimeDuration =
  xsd:positiveInteger

HBType-TrainClass =
  "Deathknight"
  | "Druid"
  | "Hunter"
  | "Mage"
  | "Monk"
  | "Paladin"
  | "Priest"
  | "Rogue"
  | "Shaman"
  | "Warlock"
  | "Warrior"

HBType-VendorType =
  "Food"
  | "Repair"
  | "Sell"
  | "Train"


# ********** Schema for CONDITIONS **********
include "HBConditions.rnc"

# ********** Schema for CUSTOM BEHAVIORS **********
include "HBCustomBehaviors.rnc"
include "HBCustomBehaviors-ArgentTournament.rnc"
include "HBCustomBehaviors-ButtonPress.rnc"
include "HBCustomBehaviors-General.rnc"
include "HBCustomBehaviors-Hooks.rnc"
include "HBCustomBehaviors-Misc.rnc"
include "HBCustomBehaviors-SpecificQuests.rnc"
include "HBCustomBehaviors-Vehicles.rnc"
