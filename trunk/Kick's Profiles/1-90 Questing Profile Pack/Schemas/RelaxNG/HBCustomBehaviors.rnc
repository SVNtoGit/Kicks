default namespace = ""
namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"

# Original contribution by chinajade

# CustomBehavior schema is implemented via co-occurrence constraints.
#
# While co-occurrence constraints provide powerful capabilities, they
# unfortunately don't survive conversion to DTDs or W3C XML
# Schema. RELAX NG has fewer restrictions on the XML structures it can
# describe than either of those, as you'll see this in Chapter
# 16. RELAX NG's co-occurrence constraints can't be expressed with W3C
# XML Schema, because this type of schema isn't "deterministic." Some
# co-occurrence constraints can be expressed in W3C XML Schema using
# either xsi:type when possible or xs:key as a tricky hack


# ********** CUSTOMBEHAVIOR EXTENSIONS **********
Attributes-CustomForcedBehavior =
  attribute QuestId { HBType-Id }?,
  attribute QuestCompleteRequirement { QBType-QuestCompleteRequirement }?,
  attribute QuestInLogRequirement { QBType-QuestInLogRequirement }?

Attributes-CustomForcedBehavior-MandatoryQuestId =
  attribute QuestId { HBType-Id },
  attribute QuestCompleteRequirement { QBType-QuestCompleteRequirement }?,
  attribute QuestInLogRequirement { QBType-QuestInLogRequirement }?

Attributes-MobIdN-Mandatory1 =
  attribute MobId { HBType-Id },
  attribute MobId2 { HBType-Id }?,
  attribute MobId3 { HBType-Id }?,
  attribute MobId4 { HBType-Id }?,
  attribute MobId5 { HBType-Id }?,
  attribute MobId6 { HBType-Id }?,
  attribute MobId7 { HBType-Id }?,
  attribute MobId8 { HBType-Id }?,
  attribute MobId9 { HBType-Id }?

Attributes-MobIdN =
  attribute MobId { HBType-Id }?,
  attribute MobId2 { HBType-Id }?,
  attribute MobId3 { HBType-Id }?,
  attribute MobId4 { HBType-Id }?,
  attribute MobId5 { HBType-Id }?,
  attribute MobId6 { HBType-Id }?,
  attribute MobId7 { HBType-Id }?,
  attribute MobId8 { HBType-Id }?,
  attribute MobId9 { HBType-Id }?

Attributes-QuestBehaviorBase =
  attribute IgnoreMobsInBlackspots { HBType-Boolean }?,
  attribute MovementBy { QBCoreType-MovementBy }?,
  attribute NonCompeteDistance { HBType-Distance }?,
  attribute QuestId { HBType-Id }?,
  attribute QuestCompleteRequirement { QBType-QuestCompleteRequirement }?,
  attribute QuestInLogRequirement { QBType-QuestInLogRequirement }?,
  attribute QuestObjectiveIndex { xsd:positiveInteger }?,
  attribute TerminateWhen { HBType-Condition }?,
  attribute TerminationChecksQuestProgress { HBType-Boolean }?

QBCoreSubElement-HuntingGrounds =
  element HuntingGrounds {
     QBCoreSubElement-Waypoint+
  }

QBCoreSubElement-Waypoint =
  element Hotspot {
    attribute Name { HBType-Name }?,
#    attribute StartPoint { xsd:boolean }?,
#    attribute StartingPoint { xsd:boolean }?,
    Attributes-Location
  }

QBCoreType-MovementBy =
  "ClickToMoveOnly"
  | "FlightorPreferred"
  | "NavigatorOnly"
  | "NavigatorPreferred"
  | "None"

QBType-HotbarButton =
  xsd:decimal { minInclusive="1" maxInclusive="12" }

QBType-QuestCompleteRequirement =
  "Complete"
  | "CompleteOrFailed"
  | "DontCare"
  | "Failed"
  | "NotComplete"
  | "NotCompleteOrFailed"
  | "NotFailed"

QBType-QuestInLogRequirement =
  "DontCare"
  | "InLog"
  | "NotInLog"


#CustomBehavior =
#  element CustomBehavior {
#    attribute AllowBotStop { xsd:NCName }?,
#    attribute AllowBrokenAddOns { xsd:boolean }?,
#    attribute AllowBrokenPlugIns { xsd:boolean }?,
#    attribute AllowCombat { xsd:NCName }?,
#    attribute AttackButton { xsd:integer }?,
#    attribute AttackButton2 { xsd:integer }?,
#    attribute AttackButtonSecondary { xsd:integer }?,
#    attribute AttackSpellIndex { xsd:integer }?,
#    attribute AuraId { xsd:integer }?,
#    attribute AuraIdMissingFromMob { xsd:integer }?,
#    attribute AuraIdOnMob { xsd:integer }?,
#    attribute AuraId_ProxyVehicle { xsd:integer }?,
#    attribute AvoidDistance { xsd:integer }?,
#    attribute AvoidMobId { xsd:integer }?,
#    attribute Button1TargetAuraId { xsd:integer }?,
#    attribute Button2TargetAuraId { xsd:integer }?,
#    attribute Button3TargetAuraId { xsd:integer }?,
#    attribute Button4TargetAuraId { xsd:integer }?,
#    attribute Button5TargetAuraId { xsd:integer }?,
#    attribute Buttons { text }?,
#    attribute BuyItemCount { xsd:integer }?,
#    attribute BuyItemId { xsd:integer }?,
#    attribute CastOnItemId { xsd:integer }?,
#    attribute CastTime { xsd:integer }?,
#    attribute ClickToX { xsd:decimal }?,
#    attribute ClickToY { xsd:decimal }?,
#    attribute ClickToZ { xsd:decimal }?,
#    attribute CollectItemCount { xsd:integer }?,
#    attribute CollectItemId { xsd:integer }?,
#    attribute CollectUntil { xsd:NCName }?,
#    attribute CollectionDistance { xsd:integer }?,
#    attribute DestName { text }?,
#    attribute Distance { xsd:decimal }?,
#    attribute DoMail { xsd:NCName }?,
#    attribute DoRepair { xsd:NCName }?,
#    attribute DoSell { xsd:NCName }?,
#    attribute DoTrain { xsd:NCName }?,
#    attribute DropPassengerButton { xsd:integer }?,
#    attribute Eject { xsd:NMTOKEN }?,
#    attribute EndPath { text }?,
#    attribute EndPointX { xsd:decimal }?,
#    attribute EndPointY { xsd:decimal }?,
#    attribute EndPointZ { xsd:decimal }?,
#    attribute EscortCompleteWhen { xsd:NCName }?,
#    attribute EscortCompleteX { xsd:decimal }?,
#    attribute EscortCompleteY { xsd:decimal }?,
#    attribute EscortCompleteZ { xsd:decimal }?,
#    attribute EscortCountMax { xsd:integer }?,
#    attribute EscortDestX { xsd:decimal }?,
#    attribute EscortDestY { xsd:decimal }?,
#    attribute EscortDestZ { xsd:decimal }?,
#    attribute EscortMaxFightDistance { xsd:integer }?,
#    attribute EscortMaxFollowDistance { xsd:integer }?,
#    attribute EscortNpcId { xsd:integer }?,
#    attribute EscortNpcId1 { xsd:integer }?,
#    attribute EscortNpcId2 { xsd:integer }?,
#    attribute EscortNpcId3 { xsd:integer }?,
#    attribute EscortNpcId4 { xsd:integer }?,
#    attribute EscortNpcId5 { xsd:integer }?,
#    attribute EscortUntil { xsd:NCName }?,
#    attribute EventCompleteWhen { xsd:NCName }?,
#    attribute EventX { xsd:decimal }?,
#    attribute EventY { xsd:decimal }?,
#    attribute EventZ { xsd:decimal }?,
#    attribute ExitButton { xsd:integer }?,
#    attribute ExpiryAction { xsd:NCName }?,
#    attribute ExpiryTime { xsd:integer }?,
#    attribute FactionId { xsd:integer }?,
#    attribute File { text },
#    attribute FireHeight { xsd:integer }?,
#    attribute FireLocationX { xsd:decimal }?,
#    attribute FireLocationY { xsd:decimal }?,
#    attribute FireLocationZ { xsd:decimal }?,
#    attribute FoodAmount { xsd:integer }?,
#    attribute GetOffX { xsd:decimal }?,
#    attribute GetOffY { xsd:decimal }?,
#    attribute GetOffZ { xsd:decimal }?,
#    attribute GoHomeButton { xsd:integer }?,
#    attribute GoalText { text }?,
#    attribute GossipOptions { text }?,
#    attribute GroundMountFarmingMode { xsd:NCName }?,
#    attribute HarvestHerbs { xsd:NCName }?,
#    attribute HarvestMinerals { xsd:NCName }?,
#    attribute HasAuraId { xsd:integer }?,
#    attribute HealNpcId { xsd:integer }?,
#    attribute HealSpellIndex { xsd:integer }?,
#    attribute Hop { xsd:NCName }?,
#    attribute HuntingGroundRadius { xsd:integer }?,
#    attribute Ids { text }?,
#    attribute IgnoreCombat { xsd:NCName }?,
#    attribute IgnoreIndoors { xsd:NCName }?,
#    attribute IgnoreLoSToTarget { xsd:NCName }?,
#    attribute IgnoreMobsInBlackspots { xsd:NCName }?,
#    attribute InteractBlacklistTimeInSeconds { xsd:integer }?,
#    attribute InteractByBuyingItemId { xsd:integer }?,
#    attribute InteractByCastingSpellId { xsd:integer }?,
#    attribute InteractByGossipOptions { text }?,
#    attribute InteractByLooting { xsd:boolean }?,
#    attribute InteractByQuestFrameDisposition { xsd:NCName }?,
#    attribute InteractByUsingItemId { xsd:integer }?,
#    attribute IsMissingAuraId { xsd:integer }?,
#    attribute ItemAppliesAuraId { xsd:NMTOKEN }?,
#    attribute ItemId { xsd:integer }?,
#    attribute KeepTargetSelected { xsd:NCName }?,
#    attribute KillBetweenHotspots { xsd:NCName }?,
#    attribute KillNpcId { xsd:integer }?,
#    attribute Land { xsd:NCName }?,
#    attribute LearnFlightPaths { xsd:NCName }?,
#    attribute LogColor { xsd:NCName }?,
#    attribute LogoutForInactivity { xsd:NCName }?,
#    attribute Loot { xsd:NCName }?,
#    attribute LootMobs { xsd:NCName }?,
#    attribute Lua { text }?,
#    attribute Macro { text }?,
#    attribute MaxAngle { xsd:decimal }?,
#    attribute MaxRange { xsd:integer }?,
#    attribute MaxRangeToUseItem { xsd:integer }?,
#    attribute Message { text }?,
#    attribute MinAngle { xsd:decimal }?,
#    attribute MinRange { xsd:integer }?,
#    attribute MobHpPercentLeft { xsd:integer }?,
#    attribute MobId { text }?,
#    attribute MobId1 { xsd:integer }?,
#    attribute MobId10 { xsd:integer }?,
#    attribute MobId11 { xsd:integer }?,
#    attribute MobId12 { xsd:integer }?,
#    attribute MobId13 { xsd:integer }?,
#    attribute MobId14 { xsd:integer }?,
#    attribute MobId15 { xsd:integer }?,
#    attribute MobId16 { xsd:integer }?,
#    attribute MobId17 { xsd:integer }?,
#    attribute MobId18 { xsd:integer }?,
#    attribute MobId19 { xsd:integer }?,
#    attribute MobId2 { xsd:integer }?,
#    attribute MobId20 { xsd:integer }?,
#    attribute MobId3 { xsd:integer }?,
#    attribute MobId4 { xsd:integer }?,
#    attribute MobId5 { xsd:integer }?,
#    attribute MobId6 { xsd:integer }?,
#    attribute MobId7 { xsd:integer }?,
#    attribute MobId8 { xsd:integer }?,
#    attribute MobId9 { xsd:integer }?,
#    attribute MobIds { text }?,
#    attribute MobState { xsd:NCName }?,
#    attribute MobType { xsd:NCName }?,
#    attribute MountType { xsd:NCName }?,
#    attribute MountX { xsd:decimal }?,
#    attribute MountY { xsd:decimal }?,
#    attribute MountZ { xsd:decimal }?,
#    attribute MoveAwayFromMobCastingSpellId1 { xsd:integer }?,
#    attribute MoveAwayFromMobCastingSpellId2 { xsd:integer }?,
#    attribute MoveAwayFromMobCastingSpellId3 { xsd:integer }?,
#    attribute MoveAwayFromMobCastingSpellId4 { xsd:integer }?,
#    attribute MoveAwayFromMobWithAuraId1 { xsd:integer }?,
#    attribute MoveAwayFromMobWithAuraId2 { xsd:integer }?,
#    attribute MoveBehindMobCastingSpellId { xsd:integer }?,
#    attribute MoveBehindMobCastingSpellId1 { xsd:integer }?,
#    attribute MoveBehindMobCastingSpellId2 { xsd:integer }?,
#    attribute MoveBehindMobCastingSpellId3 { xsd:integer }?,
#    attribute MoveBehindMobCastingSpellId4 { xsd:integer }?,
#    attribute MoveOutOfGroundEffectAuraId1 { xsd:integer }?,
#    attribute MoveOutOfGroundEffectAuraId2 { xsd:integer }?,
#    attribute MoveWithinMaxRangeOfMob { xsd:integer }?,
#    attribute MovementBy { xsd:NCName }?,
#    attribute NCollectionDistance { xsd:integer }?,
#    attribute NMovementBy { xsd:NCName }?,
#    attribute Name { text }?,
#    attribute Names { text }?,
#    attribute Nav { xsd:NCName }?,
#    attribute NinjaSkin { xsd:NCName }?,
#    attribute NonCompeteDistance { xsd:integer }?,
#    attribute NotMoving { xsd:NCName }?,
#    attribute NpcID { xsd:integer }?,
#    attribute NpcList { text }?,
#    attribute NumOfTime { xsd:integer }?,
#    attribute NumOfTimes { xsd:integer }?,
#    attribute NumOfTimesToUseItem { xsd:integer }?,
#    attribute ObjectId { xsd:integer }?,
#    attribute ObjectId1 { xsd:integer }?,
#    attribute ObjectId2 { xsd:integer }?,
#    attribute ObjectType { xsd:NCName }?,
#    attribute OftenToUse { xsd:integer }?,
#    attribute Path { text }?,
#    attribute PickUpPassengerButton { xsd:integer }?,
#    attribute PreInteractMountStrategy { xsd:NCName }?,
#    attribute Precision { xsd:integer }?,
#    attribute PreferKillingMobId { xsd:integer }?,
#    attribute PreferKillingMobId1 { xsd:integer }?,
#    attribute Preset { xsd:NCName }?,
#    attribute PreviousFireLocationX { xsd:decimal }?,
#    attribute PreviousFireLocationY { xsd:decimal }?,
#    attribute PreviousFireLocationZ { xsd:decimal }?,
#    attribute PriorityTargetId { xsd:integer }?,
#    attribute ProactiveCombatStrategy { xsd:NCName }?,
#    attribute ProfileName { text }?,
#    attribute PullDistance { xsd:integer }?,
#    attribute QuestId { xsd:integer }?,
#    attribute QuestName { text }?,
#    attribute QuestObjectiveIndex { xsd:integer }?,
#    attribute RandomizeStartingHotspot { xsd:boolean }?,
#    attribute Range { xsd:decimal }?,
#    attribute RecallPetAtMobPercentHealth { xsd:integer }?,
#    attribute RememberProfile { xsd:boolean }?,
#    attribute SearchForNpcsRadius { xsd:integer }?,
#    attribute SkinMobs { xsd:NCName }?,
#    attribute Slot { xsd:NCName }?,
#    attribute SoundCue { xsd:NCName }?,
#    attribute SoundCueInterval { xsd:integer }?,
#    attribute SpeedButton { xsd:integer }?,
#    attribute SpellId { xsd:integer }?,
#    attribute SpellIndex { xsd:integer }?,
#    attribute StandOnX { xsd:decimal }?,
#    attribute StandOnY { xsd:decimal }?,
#    attribute StandOnZ { xsd:decimal }?,
#    attribute StartEscortGossipOptions { xsd:integer }?,
#    attribute StartNpcId { xsd:integer }?,
#    attribute StartObjectivePointX { xsd:decimal }?,
#    attribute StartObjectivePointY { xsd:decimal }?,
#    attribute StartObjectivePointZ { xsd:decimal }?,
#    attribute StartPath { text }?,
#    attribute StartPointX { xsd:decimal }?,
#    attribute StartPointY { xsd:decimal }?,
#    attribute StartPointZ { xsd:decimal }?,
#    attribute StopBot { xsd:NCName }?,
#    attribute StopOnContinue { xsd:NCName }?,
#    attribute TargetId { xsd:integer }?,
#    attribute TargetId1 { xsd:integer }?,
#    attribute TargetId2 { xsd:integer }?,
#    attribute TargetId3 { xsd:integer }?,
#    attribute TargetId4 { xsd:integer }?,
#    attribute TargetLocationX { xsd:decimal }?,
#    attribute TargetLocationY { xsd:decimal }?,
#    attribute TargetLocationZ { xsd:decimal }?,
#    attribute TargetNearest { xsd:boolean }?,
#    attribute TargetOnlyIfHealthPercentAbove { xsd:integer }?,
#    attribute TerminateWhen { text }?,
#    attribute Text { text }?,
#    attribute Title { text }?,
#    attribute TradeSkillId { xsd:integer }?,
#    attribute TradeSkillItemId { xsd:integer }?,
#    attribute TrainNewSkills { xsd:NCName }?,
#    attribute Transport { xsd:integer }?,
#    attribute TransportEndX { xsd:decimal }?,
#    attribute TransportEndY { xsd:decimal }?,
#    attribute TransportEndZ { xsd:decimal }?,
#    attribute TransportId { xsd:integer }?,
#    attribute TransportStartX { xsd:decimal }?,
#    attribute TransportStartY { xsd:decimal }?,
#    attribute TransportStartZ { xsd:decimal }?,
#    attribute Type { xsd:NCName }?,
#    attribute TypeId { xsd:integer }?,
#    attribute UpdateGoalText { xsd:boolean }?,
#    attribute UseCTM { xsd:boolean }?,
#    attribute UseFlightPaths { xsd:NCName }?,
#    attribute UseItemStrategy { xsd:NCName }?,
#    attribute UseMount { xsd:NCName }?,
#    attribute UseOnce { xsd:NCName }?,
#    attribute UseRelative { xsd:boolean }?,
#    attribute UseType { xsd:NCName }?,
#    attribute UseWhenMobCastingSpellId { xsd:integer }?,
#    attribute UseWhenMobHasHealthPercent { xsd:integer }?,
#    attribute VarianTime { xsd:integer }?,
#    attribute VariantTime { xsd:integer }?,
#    attribute VehicleID { xsd:integer }?,
#    attribute VehicleId { xsd:integer }?,
#    attribute VehicleId2 { xsd:integer }?,
#    attribute VehicleId3 { xsd:integer }?,
#    attribute VehicleMountId { xsd:integer }?,
#    attribute VehicleType { xsd:integer }?,
#    attribute Wait { xsd:integer }?,
#    attribute WaitAtX { xsd:decimal }?,
#    attribute WaitAtY { xsd:decimal }?,
#    attribute WaitAtZ { xsd:decimal }?,
#    attribute WaitForNpc { xsd:NCName }?,
#    attribute WaitForNpcs { xsd:NCName }?,
#    attribute WaitForVehicle { xsd:boolean }?,
#    attribute WaitTime { xsd:integer }?,
#    attribute WaitTimeAfterItemUse { xsd:integer }?,
#    attribute Waittime { xsd:integer }?,
#    attribute X { xsd:decimal }?,
#    attribute Y { xsd:decimal }?,
#    attribute Z { xsd:decimal }?,
#    attribute state { xsd:boolean }?,
#    element FollowPath {
#      attribute DismissPet { xsd:boolean },
#      attribute EgressDistance { xsd:integer },
#      attribute Strategy { xsd:NCName },
#      Hotspot+
#    }?,
#    (DisableBehavior | EnableBehavior | Hotspot | UseItem)*,
#    (CustomBehavior
#     | element Safespots { Hotspot+ })?,
#    element SearchPath { Hotspot+ }?,
#    element EscortPath { Hotspot+ }?,
#    element HuntingGrounds {
#      attribute WaypointVisitStrategy { xsd:NCName }?,
#      (text | Hotspot | Hotspots | UseMount)+
#    }?,
#    Blackspots?,
#    element Start {
#      Attributes-Location
#    }?,
#    ((element End {
#        Attributes-Location
#      },
#      element Hop {
#        Attributes-Location
#      }+)
#     | element Path {
#         Attributes-Location
#       }*),
#    QBCoreSubElement-HuntingGrounds?
#  }

